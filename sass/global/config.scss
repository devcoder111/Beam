/*
// === Config Variables ===
*/

$all-colors: (
	white      : #FFFFFF,
	black      : #000000,
	blue       : #2F358E,
	blue-light : #E6F1FF,
	tan        : #EBE5DC,
	dark-gray  : #5f5f5f,
	gray       : #C2C2C2,
	yellow     : #F1CD9D,
	light-gray: #e9e9e9,
	orange : #F4BE7D,
	green: #4CA585,
	purple: #8B8CEF,
	new-blue: #3D7CC9
);

$breakpoints : (
	xs : 400px,
	sm : 600px,
	md : 800px,
	lg : 1000px,
	xl : 1200px,
	xxl : 1400px,
	xxxl : 1600px,
	xxxxl : 1800px,
);

// Spacer
$spacer-max: 10;
$spacer-size: 10px;

$column-size: 12;

// Grid

$grid-gutter-mobile: 28px;
$grid-gutter-desktop: 20px;

$grid-gutter-extra: (
	none    : 0px,
	small   : 10px,
	mobile  : $grid-gutter-mobile,
	default : $grid-gutter-desktop,
	large   : 50px,
	xl      : 80px,
);

$grid-padding-mobile: 28px;
$grid-padding-desktop: 20px;
$grid-max-width: 1920px;

// Typography

$font-size-body-mobile: 14px;
$line-height-body-mobile: 24px;

$font-size-body-desktop: 16px;
$line-height-body-desktop: 26px;

$font-family-austin: 'Poppins', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Ubuntu, Helvetica Neue, sans-serif;
$font-family-poppins: 'Poppins', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Ubuntu, Helvetica Neue, sans-serif;

// Buttons

$wave-button-height: 44px;
$button-height-mobile: 50px;
$button-height-desktop: 70px;
$button-height-select: 50px;
$button-height-quick-add: 40px;

// Banner

$banner-height: 45px;

// Layering

$z-index-cta:           700;
$z-index-interstitial:  600000;
$z-index-quiz-fixed-ui: 500;
$z-index-quiz:          400;
$z-index-banner:        300;
$z-index-takeover:      200;
$z-index-header-nav:    100000;

/*
// === Config Getter Functions ===
*/

@function color($color-name) {
	$color-found: map-has-key($all-colors, $color-name);
	@if ($color-found == true) {
		@return map-get($all-colors, $color-name);
	} @else {
		@warn "Color " + #{$color-name} + " doesn't exist.";
	}
}

@mixin breakpoint($size) {
	$breakpoint-found: map-has-key($breakpoints, $size);
	@if ($breakpoint-found == true) {
		$breakpoint: map-get($breakpoints, $size);
		@media (min-width: #{$breakpoint}) {
			@content;
		}
	} @else {
		@warn "Breakpoint size " + #{$size} + " doesn't exist.";
	}
}

@function gutter($gutter-name) {
	$gutter-found: map-has-key($grid-gutter-extra, $gutter-name);
	@if ($gutter-found == true) {
		@return map-get($grid-gutter-extra, $gutter-name);
	} @else {
		@warn "Gutter " + #{$gutter-name} + " doesn't exist.";
	}
}